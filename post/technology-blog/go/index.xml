<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Go Programming on hoverzheng</title>
    <link>https://hoverzheng.github.io/post/technology-blog/go/</link>
    <description>Recent content in Go Programming on hoverzheng</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <managingEditor>zg_hover@sina.com (hoverzheng)</managingEditor>
    <webMaster>zg_hover@sina.com (hoverzheng)</webMaster>
    <lastBuildDate>Tue, 27 Mar 2018 07:00:53 +0800</lastBuildDate>
    
	<atom:link href="https://hoverzheng.github.io/post/technology-blog/go/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Goroutine Leak和解决之道</title>
      <link>https://hoverzheng.github.io/post/technology-blog/go/goroutine-leak%E5%92%8C%E8%A7%A3%E5%86%B3%E4%B9%8B%E9%81%93/</link>
      <pubDate>Mon, 16 Jul 2018 06:55:36 +0800</pubDate>
      <author>zg_hover@sina.com (hoverzheng)</author>
      <guid>https://hoverzheng.github.io/post/technology-blog/go/goroutine-leak%E5%92%8C%E8%A7%A3%E5%86%B3%E4%B9%8B%E9%81%93/</guid>
      <description>概述 在Go中，goroutine很轻量级，随便创建成千上万个goroutine不是问题，但要注意，要是这么多的goroutine一致递增，而</description>
    </item>
    
  </channel>
</rss>